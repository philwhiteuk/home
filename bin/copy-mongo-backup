#!/bin/bash

print_usage() {
  
echo """

  copies a mongo backup from AWS and extracts to data path (requires root)
  usage: basename($0) [-options] awsBackupFileRef

  options:
  -d [=/var/lib/mongodb]    mongo data path
  --aws_region [=eu-west-1] AWS region
  --aws_access_key_id       AWS IAM access key
  --aws_secret_access_key   AWS IAM secret

"""

}

data_path="/var/lib/mongodb"
aws_access_key_id=""
aws_secret_access_key=""
aws_region="eu-west-1"
backup_name=""

while [[ -n $1 ]]; do
  
  case $1 in

    -h) 
      shift
      host=$1
    ;;    

    -d) 
      shift
      data_path=$1
    ;;

    --aws_region) 
      shift
      aws_region=$1
    ;;

    --aws_access_key_id) 
      shift
      aws_access_key_id=$1
    ;;

    --aws_secret_access_key) 
      shift
      aws_secret_access_key=$1
    ;;

    *)
      backup_name=$1
    ;;

  esac

  shift

done

if [[ -n $backup_name && -n $aws_access_key_id && -n $aws_secret_access_key ]]; then
  
  echo 'installing awscli package...'
  sudo apt-get install -y awscli
  
  echo 'clearing mongodb path...'
  sudo rm -rf $data_path/*

  export AWS_ACCESS_KEY_ID=$aws_access_key_id
  export AWS_SECRET_ACCESS_KEY=$aws_secret_access_key
  export AWS_DEFAULT_REGION=$aws_region
  
  echo 'copying backup from S3...'
  local_file=/tmp/mongodb_backup_$RANDOM.tar.gz
  aws s3 cp s3://$backup_name $local_file

  echo 'extracting contents to mongodb path...'
  sudo tar -C $data_path xzf $local_file

  echo 'removing tmp files...'
  rm -rf $local_file ${local_file/.tar.gz//}

  echo 'complete.'

else
  print_usage
  exit 1
fi